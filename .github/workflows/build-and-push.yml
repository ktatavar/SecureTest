name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'app/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'app/**'
  workflow_dispatch:  # Allow manual trigger

env:
  IMAGE_NAME: todo-app
  AWS_REGION: us-east-1
  ROLE_NAME: GitHubActionsECRRole  # Standard role name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write  # Required for OIDC
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Derive AWS Role ARN
        id: aws-config
        run: |
          # Auto-derive role ARN from account ID
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}"
          AWS_ROLE_ARN="arn:aws:iam::${AWS_ACCOUNT_ID}:role/${{ env.ROLE_NAME }}"
          echo "role-arn=${AWS_ROLE_ARN}" >> $GITHUB_OUTPUT
          echo "âœ… Using Role: ${AWS_ROLE_ARN}"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.aws-config.outputs.role-arn }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
      
      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.build-push.outputs.digest }}"
      
      - name: Update Kubernetes deployment (optional)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          echo "Image: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:latest"
          echo "Update your Kubernetes deployment with this image"
